name: SolutionChallenge FE Actions

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Get Yarn Cache Dir Path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Caching Yarn Dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            **/node_modules
            ~/.npm
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      # - name: Lint test
      #   run: yarn lint

      # - name: Test
      #   run: yarn test

      - name: Build
        run: yarn build

      # - name: Hashing Tag
      #   id: sha256
      #   run: |
      #     echo "sha=$(echo ${{ github.sha }} | cut -c1-7" >> $GITHUB_OUTPUT
      #     echo "timestamp=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Build and Push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: |
      #       FE/app:latest
      #       FE/app:${{ steps.sha256.outputs.sha }}
      #       FE/app:${{ steps.sha256.outputs.timestamp }}-${{ steps.sha256.outputs.sha }}
